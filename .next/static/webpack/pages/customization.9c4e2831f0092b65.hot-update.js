"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/customization",{

/***/ "(pages-dir-browser)/./src/utils/fontLoader.ts":
/*!*********************************!*\
  !*** ./src/utils/fontLoader.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadFont: () => (/* binding */ loadFont)\n/* harmony export */ });\n/* harmony import */ var webfontloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webfontloader */ \"(pages-dir-browser)/./node_modules/webfontloader/webfontloader.js\");\n/* harmony import */ var webfontloader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webfontloader__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Loads a font dynamically using webfontloader. Supports Google Fonts and custom fonts.\n * @param fontFamily The font family name (e.g., 'Merriweather', 'Pacifico', etc.)\n * @param options Optional: { customUrl, isCustom }\n */ function loadFont(fontFamily, options) {\n    if ((options === null || options === void 0 ? void 0 : options.isCustom) && options.customUrl) {\n        webfontloader__WEBPACK_IMPORTED_MODULE_0___default().load({\n            custom: {\n                families: [\n                    fontFamily\n                ],\n                urls: [\n                    options.customUrl\n                ]\n            }\n        });\n    } else {\n        webfontloader__WEBPACK_IMPORTED_MODULE_0___default().load({\n            google: {\n                families: [\n                    fontFamily\n                ]\n            }\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy91dGlscy9mb250TG9hZGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUVwQzs7OztDQUlDLEdBQ00sU0FBU0MsU0FDZkMsVUFBa0IsRUFDbEJDLE9BQW9EO0lBRXBELElBQUlBLENBQUFBLG9CQUFBQSw4QkFBQUEsUUFBU0MsUUFBUSxLQUFJRCxRQUFRRSxTQUFTLEVBQUU7UUFDM0NMLHlEQUFZLENBQUM7WUFDWk8sUUFBUTtnQkFDUEMsVUFBVTtvQkFBQ047aUJBQVc7Z0JBQ3RCTyxNQUFNO29CQUFDTixRQUFRRSxTQUFTO2lCQUFDO1lBQzFCO1FBQ0Q7SUFDRCxPQUFPO1FBQ05MLHlEQUFZLENBQUM7WUFDWlUsUUFBUTtnQkFDUEYsVUFBVTtvQkFBQ047aUJBQVc7WUFDdkI7UUFDRDtJQUNEO0FBQ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZHNoZWluYmVpbi9jb2RlL3ZpYmUtZ3JpZC9zcmMvdXRpbHMvZm9udExvYWRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViRm9udCBmcm9tICd3ZWJmb250bG9hZGVyJztcblxuLyoqXG4gKiBMb2FkcyBhIGZvbnQgZHluYW1pY2FsbHkgdXNpbmcgd2ViZm9udGxvYWRlci4gU3VwcG9ydHMgR29vZ2xlIEZvbnRzIGFuZCBjdXN0b20gZm9udHMuXG4gKiBAcGFyYW0gZm9udEZhbWlseSBUaGUgZm9udCBmYW1pbHkgbmFtZSAoZS5nLiwgJ01lcnJpd2VhdGhlcicsICdQYWNpZmljbycsIGV0Yy4pXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbDogeyBjdXN0b21VcmwsIGlzQ3VzdG9tIH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRGb250KFxuXHRmb250RmFtaWx5OiBzdHJpbmcsXG5cdG9wdGlvbnM/OiB7IGN1c3RvbVVybD86IHN0cmluZzsgaXNDdXN0b20/OiBib29sZWFuIH1cbikge1xuXHRpZiAob3B0aW9ucz8uaXNDdXN0b20gJiYgb3B0aW9ucy5jdXN0b21VcmwpIHtcblx0XHRXZWJGb250LmxvYWQoe1xuXHRcdFx0Y3VzdG9tOiB7XG5cdFx0XHRcdGZhbWlsaWVzOiBbZm9udEZhbWlseV0sXG5cdFx0XHRcdHVybHM6IFtvcHRpb25zLmN1c3RvbVVybF0sXG5cdFx0XHR9LFxuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdFdlYkZvbnQubG9hZCh7XG5cdFx0XHRnb29nbGU6IHtcblx0XHRcdFx0ZmFtaWxpZXM6IFtmb250RmFtaWx5XSxcblx0XHRcdH0sXG5cdFx0fSk7XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJXZWJGb250IiwibG9hZEZvbnQiLCJmb250RmFtaWx5Iiwib3B0aW9ucyIsImlzQ3VzdG9tIiwiY3VzdG9tVXJsIiwibG9hZCIsImN1c3RvbSIsImZhbWlsaWVzIiwidXJscyIsImdvb2dsZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/fontLoader.ts\n"));

/***/ })

});