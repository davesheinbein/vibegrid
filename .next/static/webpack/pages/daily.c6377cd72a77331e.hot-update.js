"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/daily",{

/***/ "(pages-dir-browser)/./src/utils/shareLinks.ts":
/*!*********************************!*\
  !*** ./src/utils/shareLinks.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPersonalizedShareText: () => (/* binding */ getPersonalizedShareText),\n/* harmony export */   getShareLinks: () => (/* binding */ getShareLinks)\n/* harmony export */ });\n/* harmony import */ var _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fortawesome/free-brands-svg-icons */ \"(pages-dir-browser)/./node_modules/@fortawesome/free-brands-svg-icons/index.mjs\");\n\n// Platform brand colors for styling share buttons/icons\nvar platformColors = {\n    X: '#1da1f2',\n    Meta: '#1877f3',\n    Reddit: '#ff4500',\n    LinkedIn: '#0077b5',\n    TikTok: '#010101',\n    Instagram: '#e1306c'\n};\nfunction getShareLinks(type, shareText, shareUrl, shareTitle) {\n    // You can customize text/url logic per mode if needed\n    return [\n        {\n            name: 'X',\n            url: \"https://twitter.com/intent/tweet?text=\".concat(encodeURIComponent(shareText), \"%20\").concat(encodeURIComponent(shareUrl)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faXTwitter,\n            color: platformColors.X\n        },\n        {\n            name: 'Meta',\n            url: \"https://www.facebook.com/sharer/sharer.php?u=\".concat(encodeURIComponent(shareUrl), \"&quote=\").concat(encodeURIComponent(shareText)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faMeta,\n            color: platformColors.Meta\n        },\n        {\n            name: 'Reddit',\n            url: \"https://www.reddit.com/submit?title=\".concat(encodeURIComponent(shareTitle), \"&text=\").concat(encodeURIComponent(shareText + '\\n' + shareUrl)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faReddit,\n            color: platformColors.Reddit\n        },\n        {\n            name: 'LinkedIn',\n            url: \"https://www.linkedin.com/sharing/share-offsite/?url=\".concat(encodeURIComponent(shareUrl), \"&title=\").concat(encodeURIComponent(shareTitle), \"&summary=\").concat(encodeURIComponent(shareText)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faLinkedin,\n            color: platformColors.LinkedIn\n        },\n        {\n            name: 'TikTok',\n            url: \"https://www.tiktok.com/share?url=\".concat(encodeURIComponent(shareUrl), \"&text=\").concat(encodeURIComponent(shareText)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faTiktok,\n            color: platformColors.TikTok\n        },\n        {\n            name: 'Instagram',\n            url: \"https://www.instagram.com/?url=\".concat(encodeURIComponent(shareUrl)),\n            icon: _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_0__.faInstagram,\n            color: platformColors.Instagram\n        }\n    ];\n}\nvar shareMessageTemplates = [\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"I just cracked \".concat(solved, \"/\").concat(total, \" groups in \").concat(time, \" on Grid Royale’s \").concat(mode, \". Think you can beat me? Prove it: \").concat(url);\n    },\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"\".concat(attempts === 0 ? 'Zero mistakes.' : \"\".concat(attempts, \" attempt\").concat(attempts === 1 ? '' : 's', \" used.\"), \" \").concat(solved, \" group\").concat(solved === 1 ? '' : 's', \" solved. \").concat(time, \". \").concat(mode, \" domination on Grid Royale. Step up: \").concat(url);\n    },\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"Grid Royale has me hooked. \".concat(solved, \"/\").concat(total, \" groups crushed in \").concat(attempts, \" attempt\").concat(attempts === 1 ? '' : 's', \". Timer? \").concat(time, \". Bet you can’t top that: \").concat(url);\n    },\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"Today’s Grid Royale puzzle? Destroyed it. \".concat(solved, \" outta \").concat(total, \" groups in \").concat(time, \". Beat my time, if you dare: \").concat(url);\n    },\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"Tough grid. Tight timer. \".concat(solved, \"/\").concat(total, \" groups cleared. Can you top my \").concat(time, \" run? Get on it: \").concat(url);\n    },\n    function(param) {\n        var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, mode = param.mode, url = param.url;\n        return \"My Grid Royale \".concat(mode, \" run: \").concat(solved, \"/\").concat(total, \" groups, \").concat(attempts, \" attempts, \").concat(time, \". Try to beat me: \").concat(url);\n    }\n];\nvar shareMessageTemplateIdx = 0;\nfunction getPersonalizedShareText(param) {\n    var score = param.score, solved = param.solved, total = param.total, attempts = param.attempts, time = param.time, _param_mode = param.mode, mode = _param_mode === void 0 ? 'Daily Puzzle' : _param_mode, _param_url = param.url, url = _param_url === void 0 ? 'https://gridRoyale.app' : _param_url;\n    // Fallbacks for edge cases\n    var safeSolved = typeof solved === 'number' && solved >= 0 ? solved : 0;\n    var safeTotal = typeof total === 'number' && total > 0 ? total : 4;\n    var safeAttempts = typeof attempts === 'number' && attempts >= 0 ? attempts : 0;\n    var safeTime = time || '--:--';\n    var safeMode = mode || 'Daily Puzzle';\n    var safeUrl = url || 'https://gridRoyale.app';\n    // Rotate through templates\n    var template = shareMessageTemplates[shareMessageTemplateIdx % shareMessageTemplates.length];\n    shareMessageTemplateIdx++;\n    return template({\n        score: score,\n        solved: safeSolved,\n        total: safeTotal,\n        attempts: safeAttempts,\n        time: safeTime,\n        mode: safeMode,\n        url: safeUrl\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy91dGlscy9zaGFyZUxpbmtzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQVM0QztBQUU1Qyx3REFBd0Q7QUFDeEQsSUFBTU0saUJBQXlDO0lBQzlDQyxHQUFHO0lBQ0hDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxVQUFVO0lBQ1ZDLFFBQVE7SUFDUkMsV0FBVztBQUNaO0FBU08sU0FBU0MsY0FDZkMsSUFBc0IsRUFDdEJDLFNBQWlCLEVBQ2pCQyxRQUFnQixFQUNoQkMsVUFBa0I7SUFFbEIsc0RBQXNEO0lBQ3RELE9BQU87UUFDTjtZQUNDQyxNQUFNO1lBQ05DLEtBQUsseUNBRUVDLE9BRnVDQSxtQkFDN0NMLFlBQ0MsT0FBa0MsT0FBN0JLLG1CQUFtQko7WUFDMUJLLE1BQU1yQiwwRUFBVUE7WUFDaEJzQixPQUFPaEIsZUFBZUMsQ0FBQztRQUN4QjtRQUNBO1lBQ0NXLE1BQU07WUFDTkMsS0FBSyxnREFFTUMsT0FGMENBLG1CQUNwREosV0FDQyxXQUF1QyxPQUE5QkksbUJBQW1CTDtZQUM5Qk0sTUFBTXBCLHNFQUFNQTtZQUNacUIsT0FBT2hCLGVBQWVFLElBQUk7UUFDM0I7UUFDQTtZQUNDVSxNQUFNO1lBQ05DLEtBQUssdUNBRUtDLE9BRmtDQSxtQkFDM0NILGFBQ0MsVUFFQSxPQUZRRyxtQkFDVEwsWUFBWSxPQUFPQztZQUVwQkssTUFBTW5CLHdFQUFRQTtZQUNkb0IsT0FBT2hCLGVBQWVHLE1BQU07UUFDN0I7UUFDQTtZQUNDUyxNQUFNO1lBQ05DLEtBQUssdURBRU1DLE9BRmlEQSxtQkFDM0RKLFdBQ0MsV0FFV0ksT0FGRkEsbUJBQ1ZILGFBQ0MsYUFBeUMsT0FBOUJHLG1CQUFtQkw7WUFDaENNLE1BQU1sQiwwRUFBVUE7WUFDaEJtQixPQUFPaEIsZUFBZUksUUFBUTtRQUMvQjtRQUNBO1lBQ0NRLE1BQU07WUFDTkMsS0FBSyxvQ0FFS0MsT0FGK0JBLG1CQUN4Q0osV0FDQyxVQUFzQyxPQUE5QkksbUJBQW1CTDtZQUM3Qk0sTUFBTWpCLHdFQUFRQTtZQUNka0IsT0FBT2hCLGVBQWVLLE1BQU07UUFDN0I7UUFDQTtZQUNDTyxNQUFNO1lBQ05DLEtBQUssa0NBRUgsT0FGcUNDLG1CQUN0Q0o7WUFFREssTUFBTWhCLDJFQUFXQTtZQUNqQmlCLE9BQU9oQixlQUFlTSxTQUFTO1FBQ2hDO0tBQ0E7QUFDRjtBQUVBLElBQU1XLHdCQUF3QjtJQUM3QjtZQUFHQyxjQUFBQSxPQUFPQyxlQUFBQSxRQUFRQyxjQUFBQSxPQUFPQyxpQkFBQUEsVUFBVUMsYUFBQUEsTUFBTUMsYUFBQUEsTUFBTVYsWUFBQUE7ZUFDOUMsa0JBQTRCTyxPQUFWRCxRQUFPLEtBQXNCRyxPQUFuQkYsT0FBTSxlQUFzQ0csT0FBekJELE1BQUssc0JBQThEVCxPQUExQ1UsTUFBSyx1Q0FBeUMsT0FBSlY7O0lBQ25IO1lBQUdLLGNBQUFBLE9BQU9DLGVBQUFBLFFBQVFDLGNBQUFBLE9BQU9DLGlCQUFBQSxVQUFVQyxhQUFBQSxNQUFNQyxhQUFBQSxNQUFNVixZQUFBQTtlQUM5QyxHQUFrR00sT0FBL0ZFLGFBQWEsSUFBSSxtQkFBbUIsR0FBc0JBLE9BQW5CQSxVQUFTLFlBQW9DLE9BQTFCQSxhQUFhLElBQUksS0FBSyxLQUFJLFdBQVEsS0FBa0JGLE9BQWZBLFFBQU8sVUFBMkNHLE9BQW5DSCxXQUFXLElBQUksS0FBSyxLQUFJLGFBQW9CSSxPQUFURCxNQUFLLE1BQWdEVCxPQUE1Q1UsTUFBSyx5Q0FBMkMsT0FBSlY7O0lBQzFNO1lBQUdLLGNBQUFBLE9BQU9DLGVBQUFBLFFBQVFDLGNBQUFBLE9BQU9DLGlCQUFBQSxVQUFVQyxhQUFBQSxNQUFNQyxhQUFBQSxNQUFNVixZQUFBQTtlQUM5Qyw4QkFBd0NPLE9BQVZELFFBQU8sS0FBOEJFLE9BQTNCRCxPQUFNLHVCQUF3Q0MsT0FBbkJBLFVBQVMsWUFBK0NDLE9BQXJDRCxhQUFhLElBQUksS0FBSyxLQUFJLGFBQTRDUixPQUFqQ1MsTUFBSyw4QkFBZ0MsT0FBSlQ7O0lBQzdKO1lBQUdLLGNBQUFBLE9BQU9DLGVBQUFBLFFBQVFDLGNBQUFBLE9BQU9DLGlCQUFBQSxVQUFVQyxhQUFBQSxNQUFNQyxhQUFBQSxNQUFNVixZQUFBQTtlQUM5Qyw2Q0FBNkRPLE9BQWhCRCxRQUFPLFdBQTRCRyxPQUFuQkYsT0FBTSxlQUFpRFAsT0FBcENTLE1BQUssaUNBQW1DLE9BQUpUOztJQUNySDtZQUFHSyxjQUFBQSxPQUFPQyxlQUFBQSxRQUFRQyxjQUFBQSxPQUFPQyxpQkFBQUEsVUFBVUMsYUFBQUEsTUFBTUMsYUFBQUEsTUFBTVYsWUFBQUE7ZUFDOUMsNEJBQXNDTyxPQUFWRCxRQUFPLEtBQTJDRyxPQUF4Q0YsT0FBTSxvQ0FBMERQLE9BQXhCUyxNQUFLLHFCQUF1QixPQUFKVDs7SUFDdkc7WUFBR0ssY0FBQUEsT0FBT0MsZUFBQUEsUUFBUUMsY0FBQUEsT0FBT0MsaUJBQUFBLFVBQVVDLGFBQUFBLE1BQU1DLGFBQUFBLE1BQU1WLFlBQUFBO2VBQzlDLGtCQUErQk0sT0FBYkksTUFBSyxVQUFrQkgsT0FBVkQsUUFBTyxLQUFvQkUsT0FBakJELE9BQU0sYUFBaUNFLE9BQXRCRCxVQUFTLGVBQXNDUixPQUF6QlMsTUFBSyxzQkFBd0IsT0FBSlQ7O0NBQzFHO0FBRUQsSUFBSVcsMEJBQTBCO0FBRXZCLFNBQVNDLHlCQUF5QixLQWdCeEM7UUFmQVAsUUFEd0MsTUFDeENBLE9BQ0FDLFNBRndDLE1BRXhDQSxRQUNBQyxRQUh3QyxNQUd4Q0EsT0FDQUMsV0FKd0MsTUFJeENBLFVBQ0FDLE9BTHdDLE1BS3hDQSxvQkFMd0MsTUFNeENDLE1BQUFBLGdDQUFPLDJDQU5pQyxNQU94Q1YsS0FBQUEsOEJBQU07SUFVTiwyQkFBMkI7SUFDM0IsSUFBTWEsYUFBYSxPQUFPUCxXQUFXLFlBQVlBLFVBQVUsSUFBSUEsU0FBUztJQUN4RSxJQUFNUSxZQUFZLE9BQU9QLFVBQVUsWUFBWUEsUUFBUSxJQUFJQSxRQUFRO0lBQ25FLElBQU1RLGVBQWUsT0FBT1AsYUFBYSxZQUFZQSxZQUFZLElBQUlBLFdBQVc7SUFDaEYsSUFBTVEsV0FBV1AsUUFBUTtJQUN6QixJQUFNUSxXQUFXUCxRQUFRO0lBQ3pCLElBQU1RLFVBQVVsQixPQUFPO0lBQ3ZCLDJCQUEyQjtJQUMzQixJQUFNbUIsV0FBV2YscUJBQXFCLENBQUNPLDBCQUEwQlAsc0JBQXNCZ0IsTUFBTSxDQUFDO0lBQzlGVDtJQUNBLE9BQU9RLFNBQVM7UUFDZmQsT0FBQUE7UUFDQUMsUUFBUU87UUFDUk4sT0FBT087UUFDUE4sVUFBVU87UUFDVk4sTUFBTU87UUFDTk4sTUFBTU87UUFDTmpCLEtBQUtrQjtJQUNOO0FBQ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZHNoZWluYmVpbi9jb2RlL3ZpYmUtZ3JpZC9zcmMvdXRpbHMvc2hhcmVMaW5rcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJY29uRGVmaW5pdGlvbiB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1zdmctY29yZSc7XG5pbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IHtcblx0ZmFYVHdpdHRlcixcblx0ZmFNZXRhLFxuXHRmYVJlZGRpdCxcblx0ZmFMaW5rZWRpbixcblx0ZmFUaWt0b2ssXG5cdGZhSW5zdGFncmFtLFxufSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1icmFuZHMtc3ZnLWljb25zJztcblxuLy8gUGxhdGZvcm0gYnJhbmQgY29sb3JzIGZvciBzdHlsaW5nIHNoYXJlIGJ1dHRvbnMvaWNvbnNcbmNvbnN0IHBsYXRmb3JtQ29sb3JzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuXHRYOiAnIzFkYTFmMicsXG5cdE1ldGE6ICcjMTg3N2YzJyxcblx0UmVkZGl0OiAnI2ZmNDUwMCcsXG5cdExpbmtlZEluOiAnIzAwNzdiNScsXG5cdFRpa1RvazogJyMwMTAxMDEnLFxuXHRJbnN0YWdyYW06ICcjZTEzMDZjJyxcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcmVMaW5rQ29uZmlnIHtcblx0bmFtZTogc3RyaW5nO1xuXHR1cmw6IHN0cmluZztcblx0aWNvbjogSWNvbkRlZmluaXRpb247XG5cdGNvbG9yOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaGFyZUxpbmtzKFxuXHR0eXBlOiAndXJsJyB8ICdyZXN1bHQnLFxuXHRzaGFyZVRleHQ6IHN0cmluZyxcblx0c2hhcmVVcmw6IHN0cmluZyxcblx0c2hhcmVUaXRsZTogc3RyaW5nXG4pOiBTaGFyZUxpbmtDb25maWdbXSB7XG5cdC8vIFlvdSBjYW4gY3VzdG9taXplIHRleHQvdXJsIGxvZ2ljIHBlciBtb2RlIGlmIG5lZWRlZFxuXHRyZXR1cm4gW1xuXHRcdHtcblx0XHRcdG5hbWU6ICdYJyxcblx0XHRcdHVybDogYGh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9JHtlbmNvZGVVUklDb21wb25lbnQoXG5cdFx0XHRcdHNoYXJlVGV4dFxuXHRcdFx0KX0lMjAke2VuY29kZVVSSUNvbXBvbmVudChzaGFyZVVybCl9YCxcblx0XHRcdGljb246IGZhWFR3aXR0ZXIsXG5cdFx0XHRjb2xvcjogcGxhdGZvcm1Db2xvcnMuWCxcblx0XHR9LFxuXHRcdHtcblx0XHRcdG5hbWU6ICdNZXRhJyxcblx0XHRcdHVybDogYGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIvc2hhcmVyLnBocD91PSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRzaGFyZVVybFxuXHRcdFx0KX0mcXVvdGU9JHtlbmNvZGVVUklDb21wb25lbnQoc2hhcmVUZXh0KX1gLFxuXHRcdFx0aWNvbjogZmFNZXRhLFxuXHRcdFx0Y29sb3I6IHBsYXRmb3JtQ29sb3JzLk1ldGEsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRuYW1lOiAnUmVkZGl0Jyxcblx0XHRcdHVybDogYGh0dHBzOi8vd3d3LnJlZGRpdC5jb20vc3VibWl0P3RpdGxlPSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRzaGFyZVRpdGxlXG5cdFx0XHQpfSZ0ZXh0PSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRzaGFyZVRleHQgKyAnXFxuJyArIHNoYXJlVXJsXG5cdFx0XHQpfWAsXG5cdFx0XHRpY29uOiBmYVJlZGRpdCxcblx0XHRcdGNvbG9yOiBwbGF0Zm9ybUNvbG9ycy5SZWRkaXQsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRuYW1lOiAnTGlua2VkSW4nLFxuXHRcdFx0dXJsOiBgaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL3NoYXJpbmcvc2hhcmUtb2Zmc2l0ZS8/dXJsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRzaGFyZVVybFxuXHRcdFx0KX0mdGl0bGU9JHtlbmNvZGVVUklDb21wb25lbnQoXG5cdFx0XHRcdHNoYXJlVGl0bGVcblx0XHRcdCl9JnN1bW1hcnk9JHtlbmNvZGVVUklDb21wb25lbnQoc2hhcmVUZXh0KX1gLFxuXHRcdFx0aWNvbjogZmFMaW5rZWRpbixcblx0XHRcdGNvbG9yOiBwbGF0Zm9ybUNvbG9ycy5MaW5rZWRJbixcblx0XHR9LFxuXHRcdHtcblx0XHRcdG5hbWU6ICdUaWtUb2snLFxuXHRcdFx0dXJsOiBgaHR0cHM6Ly93d3cudGlrdG9rLmNvbS9zaGFyZT91cmw9JHtlbmNvZGVVUklDb21wb25lbnQoXG5cdFx0XHRcdHNoYXJlVXJsXG5cdFx0XHQpfSZ0ZXh0PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHNoYXJlVGV4dCl9YCxcblx0XHRcdGljb246IGZhVGlrdG9rLFxuXHRcdFx0Y29sb3I6IHBsYXRmb3JtQ29sb3JzLlRpa1Rvayxcblx0XHR9LFxuXHRcdHtcblx0XHRcdG5hbWU6ICdJbnN0YWdyYW0nLFxuXHRcdFx0dXJsOiBgaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS8/dXJsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRzaGFyZVVybFxuXHRcdFx0KX1gLFxuXHRcdFx0aWNvbjogZmFJbnN0YWdyYW0sXG5cdFx0XHRjb2xvcjogcGxhdGZvcm1Db2xvcnMuSW5zdGFncmFtLFxuXHRcdH0sXG5cdF07XG59XG5cbmNvbnN0IHNoYXJlTWVzc2FnZVRlbXBsYXRlcyA9IFtcblx0KHsgc2NvcmUsIHNvbHZlZCwgdG90YWwsIGF0dGVtcHRzLCB0aW1lLCBtb2RlLCB1cmwgfSkgPT5cblx0XHRgSSBqdXN0IGNyYWNrZWQgJHtzb2x2ZWR9LyR7dG90YWx9IGdyb3VwcyBpbiAke3RpbWV9IG9uIEdyaWQgUm95YWxl4oCZcyAke21vZGV9LiBUaGluayB5b3UgY2FuIGJlYXQgbWU/IFByb3ZlIGl0OiAke3VybH1gLFxuXHQoeyBzY29yZSwgc29sdmVkLCB0b3RhbCwgYXR0ZW1wdHMsIHRpbWUsIG1vZGUsIHVybCB9KSA9PlxuXHRcdGAke2F0dGVtcHRzID09PSAwID8gJ1plcm8gbWlzdGFrZXMuJyA6IGAke2F0dGVtcHRzfSBhdHRlbXB0JHthdHRlbXB0cyA9PT0gMSA/ICcnIDogJ3MnfSB1c2VkLmB9ICR7c29sdmVkfSBncm91cCR7c29sdmVkID09PSAxID8gJycgOiAncyd9IHNvbHZlZC4gJHt0aW1lfS4gJHttb2RlfSBkb21pbmF0aW9uIG9uIEdyaWQgUm95YWxlLiBTdGVwIHVwOiAke3VybH1gLFxuXHQoeyBzY29yZSwgc29sdmVkLCB0b3RhbCwgYXR0ZW1wdHMsIHRpbWUsIG1vZGUsIHVybCB9KSA9PlxuXHRcdGBHcmlkIFJveWFsZSBoYXMgbWUgaG9va2VkLiAke3NvbHZlZH0vJHt0b3RhbH0gZ3JvdXBzIGNydXNoZWQgaW4gJHthdHRlbXB0c30gYXR0ZW1wdCR7YXR0ZW1wdHMgPT09IDEgPyAnJyA6ICdzJ30uIFRpbWVyPyAke3RpbWV9LiBCZXQgeW91IGNhbuKAmXQgdG9wIHRoYXQ6ICR7dXJsfWAsXG5cdCh7IHNjb3JlLCBzb2x2ZWQsIHRvdGFsLCBhdHRlbXB0cywgdGltZSwgbW9kZSwgdXJsIH0pID0+XG5cdFx0YFRvZGF54oCZcyBHcmlkIFJveWFsZSBwdXp6bGU/IERlc3Ryb3llZCBpdC4gJHtzb2x2ZWR9IG91dHRhICR7dG90YWx9IGdyb3VwcyBpbiAke3RpbWV9LiBCZWF0IG15IHRpbWUsIGlmIHlvdSBkYXJlOiAke3VybH1gLFxuXHQoeyBzY29yZSwgc29sdmVkLCB0b3RhbCwgYXR0ZW1wdHMsIHRpbWUsIG1vZGUsIHVybCB9KSA9PlxuXHRcdGBUb3VnaCBncmlkLiBUaWdodCB0aW1lci4gJHtzb2x2ZWR9LyR7dG90YWx9IGdyb3VwcyBjbGVhcmVkLiBDYW4geW91IHRvcCBteSAke3RpbWV9IHJ1bj8gR2V0IG9uIGl0OiAke3VybH1gLFxuXHQoeyBzY29yZSwgc29sdmVkLCB0b3RhbCwgYXR0ZW1wdHMsIHRpbWUsIG1vZGUsIHVybCB9KSA9PlxuXHRcdGBNeSBHcmlkIFJveWFsZSAke21vZGV9IHJ1bjogJHtzb2x2ZWR9LyR7dG90YWx9IGdyb3VwcywgJHthdHRlbXB0c30gYXR0ZW1wdHMsICR7dGltZX0uIFRyeSB0byBiZWF0IG1lOiAke3VybH1gLFxuXTtcblxubGV0IHNoYXJlTWVzc2FnZVRlbXBsYXRlSWR4ID0gMDtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBlcnNvbmFsaXplZFNoYXJlVGV4dCh7XG5cdHNjb3JlLFxuXHRzb2x2ZWQsXG5cdHRvdGFsLFxuXHRhdHRlbXB0cyxcblx0dGltZSxcblx0bW9kZSA9ICdEYWlseSBQdXp6bGUnLFxuXHR1cmwgPSAnaHR0cHM6Ly9ncmlkUm95YWxlLmFwcCcsXG59OiB7XG5cdHNjb3JlOiBudW1iZXI7XG5cdHNvbHZlZDogbnVtYmVyO1xuXHR0b3RhbDogbnVtYmVyO1xuXHRhdHRlbXB0czogbnVtYmVyO1xuXHR0aW1lOiBzdHJpbmc7XG5cdG1vZGU/OiBzdHJpbmc7XG5cdHVybD86IHN0cmluZztcbn0pOiBzdHJpbmcge1xuXHQvLyBGYWxsYmFja3MgZm9yIGVkZ2UgY2FzZXNcblx0Y29uc3Qgc2FmZVNvbHZlZCA9IHR5cGVvZiBzb2x2ZWQgPT09ICdudW1iZXInICYmIHNvbHZlZCA+PSAwID8gc29sdmVkIDogMDtcblx0Y29uc3Qgc2FmZVRvdGFsID0gdHlwZW9mIHRvdGFsID09PSAnbnVtYmVyJyAmJiB0b3RhbCA+IDAgPyB0b3RhbCA6IDQ7XG5cdGNvbnN0IHNhZmVBdHRlbXB0cyA9IHR5cGVvZiBhdHRlbXB0cyA9PT0gJ251bWJlcicgJiYgYXR0ZW1wdHMgPj0gMCA/IGF0dGVtcHRzIDogMDtcblx0Y29uc3Qgc2FmZVRpbWUgPSB0aW1lIHx8ICctLTotLSc7XG5cdGNvbnN0IHNhZmVNb2RlID0gbW9kZSB8fCAnRGFpbHkgUHV6emxlJztcblx0Y29uc3Qgc2FmZVVybCA9IHVybCB8fCAnaHR0cHM6Ly9ncmlkUm95YWxlLmFwcCc7XG5cdC8vIFJvdGF0ZSB0aHJvdWdoIHRlbXBsYXRlc1xuXHRjb25zdCB0ZW1wbGF0ZSA9IHNoYXJlTWVzc2FnZVRlbXBsYXRlc1tzaGFyZU1lc3NhZ2VUZW1wbGF0ZUlkeCAlIHNoYXJlTWVzc2FnZVRlbXBsYXRlcy5sZW5ndGhdO1xuXHRzaGFyZU1lc3NhZ2VUZW1wbGF0ZUlkeCsrO1xuXHRyZXR1cm4gdGVtcGxhdGUoe1xuXHRcdHNjb3JlLFxuXHRcdHNvbHZlZDogc2FmZVNvbHZlZCxcblx0XHR0b3RhbDogc2FmZVRvdGFsLFxuXHRcdGF0dGVtcHRzOiBzYWZlQXR0ZW1wdHMsXG5cdFx0dGltZTogc2FmZVRpbWUsXG5cdFx0bW9kZTogc2FmZU1vZGUsXG5cdFx0dXJsOiBzYWZlVXJsLFxuXHR9KTtcbn1cbiJdLCJuYW1lcyI6WyJmYVhUd2l0dGVyIiwiZmFNZXRhIiwiZmFSZWRkaXQiLCJmYUxpbmtlZGluIiwiZmFUaWt0b2siLCJmYUluc3RhZ3JhbSIsInBsYXRmb3JtQ29sb3JzIiwiWCIsIk1ldGEiLCJSZWRkaXQiLCJMaW5rZWRJbiIsIlRpa1RvayIsIkluc3RhZ3JhbSIsImdldFNoYXJlTGlua3MiLCJ0eXBlIiwic2hhcmVUZXh0Iiwic2hhcmVVcmwiLCJzaGFyZVRpdGxlIiwibmFtZSIsInVybCIsImVuY29kZVVSSUNvbXBvbmVudCIsImljb24iLCJjb2xvciIsInNoYXJlTWVzc2FnZVRlbXBsYXRlcyIsInNjb3JlIiwic29sdmVkIiwidG90YWwiLCJhdHRlbXB0cyIsInRpbWUiLCJtb2RlIiwic2hhcmVNZXNzYWdlVGVtcGxhdGVJZHgiLCJnZXRQZXJzb25hbGl6ZWRTaGFyZVRleHQiLCJzYWZlU29sdmVkIiwic2FmZVRvdGFsIiwic2FmZUF0dGVtcHRzIiwic2FmZVRpbWUiLCJzYWZlTW9kZSIsInNhZmVVcmwiLCJ0ZW1wbGF0ZSIsImxlbmd0aCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/shareLinks.ts\n"));

/***/ })

});